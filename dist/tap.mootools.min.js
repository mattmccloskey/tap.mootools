Element.Events.tap={onAdd:function(){console.log("add tap");var t={},e={},n=3,a=!1,o={touchstart:function(e){console.log("start"),a=!1,t.x=e.touches[0].pageX,t.y=e.touches[0].pageY},touchmove:function(o){e.x=o.touches[0].pageX,e.y=o.touches[0].pageY,(Math.abs(t.x-e.x)>n||Math.abs(t.y-e.y)>n)&&(a=!0)},touchend:function(t){a||$(t.target).fireEvent("tap",t)}};this.store("tapEvents",o).addEvents(o)},onRemove:function(){this.removeEvent("tap",this.retrieve("tapEvents"))}};var isTouch="ontouchstart"in window||"msmaxtouchpoints"in window.navigator;if(isTouch&&("undefined"==typeof convertClicksToTaps||convertClicksToTaps!==!1)){var addFunc=Element.prototype.addEvent,removeFunc=Element.prototype.removeEvent,replaceClickWithTap=function(){return"string"==typeof arguments[0]&&"click"===arguments[0].slice(0,5)&&(arguments[0]=arguments[0].replace("click","tap")),arguments};Element.implement({addEvent:function(){return"string"==typeof arguments[0]&&"click"===arguments[0].slice(0,5)&&this.addEventListener("click",function(t){t.preventDefault()}),addFunc.attempt(replaceClickWithTap.attempt(arguments),this)},removeEvent:function(){return removeFunc.attempt(replaceClickWithTap.attempt(arguments),this)}})}