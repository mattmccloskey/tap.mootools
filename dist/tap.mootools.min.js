Element.Events.tap={onAdd:function(){var e={},t={},n=3,a={touchstart:function(t){t.preventDefault(),this.store("touchmoved",!1),this.store("hastouch",!0),e.x=t.touches[0].pageX,e.y=t.touches[0].pageY},touchmove:function(a){t.x=a.touches[0].pageX,t.y=a.touches[0].pageY,(Math.abs(e.x-t.x)>n||Math.abs(e.y-t.y)>n)&&this.store("touchmoved",!0)},touchend:function(e){this.retrieve("touchmoved")||this.fireEvent("tap",e)}};this.store("tapEvents",a).addEvents(a)},onRemove:function(){this.removeEvent("tap",this.retrieve("tapEvents"))}};var isTouch="ontouchstart"in window||"msmaxtouchpoints"in window.navigator;if(isTouch=!0,isTouch&&("undefined"==typeof convertClicksToTaps||convertClicksToTaps!==!1)){var addFunc=Element.addEvent,removeFunc=Element.removeEvent,addFuncs=Element.addEvents,removeFuncs=Element.removeEvents,replaceClickWithTap=function(){return"string"==typeof arguments[0]&&"click"===arguments[0].slice(0,5)&&(arguments[0]=arguments[0].replace("click","tap")),arguments};Element.implement({addEvent:function(){return addFunc.apply(this,replaceClickWithTap.apply(this,arguments))},removeEvent:function(){return removeFunc.apply(this,replaceClickWithTap.apply(this,arguments))},addEvents:function(){return addFuncs.apply(this,replaceClickWithTap.apply(this,arguments))},removeEvents:function(){return removeFuncs.apply(this,replaceClickWithTap.apply(this,arguments))}})}